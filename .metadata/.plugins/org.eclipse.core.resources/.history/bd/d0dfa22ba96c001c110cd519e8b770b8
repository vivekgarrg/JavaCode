package data_structure;

public class MergeSort 
{
	public static void conqure(int arr[], int si,int mid, int ei)
	{
		int merged[]=new int[ei-si+1];
		int arr1[] = new int[mid-si +1];
		int arr2[] = new int[ei-mid];
		
		int idx1=si;
		int idx2=mid+1;
		int x=0;
		
		while(idx1<=mid && idx2<=ei)
		{
			if(arr[idx1] <= arr[idx2])
				merged[x++]=arr[idx1++];
			else
				merged[x++]=arr[idx2++];
		}
		
		while(idx1<=arr.length)
		{
			merged[x++]=arr[idx1++];
		}
		while(idx2<=arr.length)
		{
			merged[x++]=arr[idx2++];
		}
		
		for(int i=0,j=si;i<arr.length;i++,j++)
		{
			merged[j]=arr[i];
		}
	}
	
	public static void print(int arr[]) {
		for(int i:arr)
		{
			System.out.print(i + " ");
		}
	}
	
	
	public static void divide(int arr[],int si,int ei)
	{
		
	   if(si>=ei)
		return;
	
		int mid =si + (ei-si)/2;
	
		divide(arr,si,mid);
		divide(arr,mid+1,ei);
//		conqure(arr,si,mid,ei);
	
	
		
	}
		
	
	public static void main(String[] args) 
	{
		int arr[] = {6,3,2,9,5,8,16};
		int n=arr.length;
		divide(arr,0,n-1);
		print(arr);
	}

}